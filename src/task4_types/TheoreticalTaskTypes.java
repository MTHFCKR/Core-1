package task4_types;

/**
 * 1. Какие методы и классы предоставляет Java для работы с примитивными типами данных?
 *
 * 2. Что такое "преобразование типов с потерей данных" (narrowing conversion) и "преобразование типов без потери данных
 *       "(widening conversion) при работе с примитивными типами данных, и какие они могут быть опасными?
 */
public class TheoreticalTaskTypes {

    public static void main(String[] args) {
        /**
         * Что выведет код?
         */
        int x = 5;
        int y = x++;

        System.out.println(x + " " + y);

        boolean a = true;
        boolean b = false;
        System.out.println(a && b);

    }















    /**
     * 1.Java предоставляет ряд методов и классов для работы с примитивными типами данных, включая:
     * toString(): Метод, который позволяет преобразовать примитивные типы данных в их строковое представление.
     * valueOf(): Статический метод, предоставляемый некоторыми оберточными классами (например, Integer, Double),
     * который позволяет создавать объекты из строкового представления.
     * parseInt(), parseDouble(), и другие аналогичные методы для преобразования строк в примитивные типы.
     *
     * 2.Преобразование с потерей данных (narrowing conversion): Это преобразование, при котором значение одного типа
     * данных приводится к другому типу, который может иметь меньший диапазон значений. Например, преобразование int в byte.
     * При этом могут возникнуть потери данных или переполнения.
     *
     * Преобразование без потери данных (widening conversion): Это преобразование, при котором значение одного типа
     * данных приводится к другому типу, который может иметь больший диапазон значений. Например, преобразование byte в int.
     * Здесь нет потери данных.
     */


}
