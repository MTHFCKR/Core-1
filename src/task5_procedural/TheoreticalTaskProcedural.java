package task5_procedural;

/**
 *       1.Что такое "рефакторинг" (refactoring) в ООП, и какие методы
 *        и инструменты помогают улучшать архитектуру и читаемость кода?
 *       2.Что такое "перегрузка операторов" (operator overloading) ?
 */
public class TheoreticalTaskProcedural {

    /**
     * Что выведет код?
     */

    public static void main(String[] args) {
        int x = 5;
        if (x > 0) {
            System.out.println("Positive");
        } else if (x < 0) {
            System.out.println("Negative");
        } else {
            System.out.println("Zero");
        }

        /**
         * И этот код тоже ...
         */

        int sum = 0;
        for (int i = 1; i <= 5; i++) {
            sum += i;
        }
        System.out.println(sum);
    }

















    /**
     * 1.Рефакторинг - это процесс изменения структуры и дизайна программного кода с целью улучшения его читаемости, поддерживаемости и производительности, без изменения его функциональности. Рефакторинг помогает устранить долги по техническому долгу и сделать код более гибким.
     * Инструменты и методы рефакторинга:
     *
     * 2.Перегрузка операторов - это возможность определить различное поведение операторов для разных типов данных или классов. Например, в некоторых языках программирования можно перегрузить оператор "+"
     * для сложения чисел и конкатенации строк. Однако в Java перегрузка операторов
     * не поддерживается для пользовательских классов. Это сделано для обеспечения ясности
     * и предсказуемости поведения операторов, так как в противном случае код может стать менее читаемым и понятным.
     */
}







