package task3_gc;


/**
 * 1.Какие объекты считаются "достижимыми" (reachable) и "недостижимыми" (unreachable) для сборщика мусора?
 *
 * 2.Что такое "корень" (root) в контексте сборки мусора и какие объекты могут быть корнями?
 *
 * 3.Что такое "циклические ссылки" (circular references) и какие проблемы они могут вызвать при сборке мусора?
 *
 * 4.Что такое "горячая точка" (hot spot) в сборке мусора и какие методы можно использовать для ее выявления и оптимизации?
 */
public class TheoreticalTaskGC {






































    /**
     * 1.Достижимые объекты - это объекты, на которые существует ссылка из корневых объектов или других достижимых объектов.
     * Недостижимые объекты - это объекты, на которые нет ссылок из корней и из других достижимых объектов.
     *
     * 2.Корень - это объект или ссылка, из которого начинается процесс определения достижимых объектов.
     * В Java, корнями могут быть стек вызовов (локальные переменные и параметры методов),
     * статические поля классов и некоторые другие системные объекты, такие как классы загрузчиков (ClassLoader).
     *
     * 3.Циклические ссылки - это ситуация, когда группа объектов ссылаются друг на друга, создавая замкнутый цикл ссылок.
     *     Это приводит к тому, что эти объекты могут оставаться достижимыми, даже если на них не существует ссылок из корней,
     *      и могут избегать сборки мусора, что может вызвать утечку памяти.
     *
     * 4.Горячая точка - это участок кода, где создание и удаление объектов происходит чрезмерно часто и может вызывать
     *      большую нагрузку на сборщик мусора. Для выявления и оптимизации горячих точек можно использовать профилировщики
     *      и инструменты анализа производительности.
     */


}









